import{jsx as _jsx}from"react/jsx-runtime";import*as React from"react";import{useState,useEffect,useRef}from"react";import{addPropertyControls,ControlType,motion}from"framer";import{NullState}from"https://framer.com/m/framer/icon-nullstate.js@0.7.0";import HouseFactory from"https://framer.com/m/phosphor-icons/House.js@0.0.37";import{defaultEvents,useIconSelection}from"https://framerusercontent.com/modules/Ma20hU0GGRxLxZphbywl/BwKdJRyuRNWL7zr4njQR/utils.js";import{iconKeys}from"https://framerusercontent.com/modules/HjE5G3pY4j35zPmCddii/hMD6e6sWDTBgmz36oUyk/phosphorKeys.js";const moduleBaseUrl="https://framer.com/m/phosphor-icons/";const weightOptions=["thin","light","regular","bold","fill","duotone",];const lowercaseIconKeyPairs=iconKeys.reduce((res,key)=>{res[key.toLowerCase()]=key;return res;},{});/**
 * PHOSPHOR
 *
 * @framerSupportedLayoutWidth fixed
 * @framerSupportedLayoutHeight fixed
 *
 * @framerIntrinsicWidth 24
 * @framerIntrinsicHeight 24
 */ export function Icon(props){const{color,selectByList,iconSearch,iconSelection,onClick,onMouseDown,onMouseUp,onMouseEnter,onMouseLeave,weight,mirrored}=props;const isMounted=useRef(false);const iconKey=useIconSelection(iconKeys,selectByList,iconSearch,iconSelection,lowercaseIconKeyPairs);const[SelectedIcon,setSelectedIcon]=useState(iconKey==="Home"?HouseFactory(React):null);async function importModule(){// Get the selected module
try{const iconModuleUrl=`${moduleBaseUrl}${iconKey}.js@0.0.37`;const module=await import(/* webpackIgnore: true */ iconModuleUrl);if(isMounted.current)setSelectedIcon(module.default(React));}catch(err){if(isMounted.current)setSelectedIcon(null);}}useEffect(()=>{isMounted.current=true;importModule();return()=>{isMounted.current=false;};},[iconKey]);return(/*#__PURE__*/ _jsx(motion.div,{style:{display:"contents"},onClick,onMouseEnter,onMouseLeave,onMouseDown,onMouseUp,children:/*#__PURE__*/ _jsx("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 256 256",style:{userSelect:"none",width:"100%",height:"100%",display:"inline-block",fill:color,flexShrink:0,transform:mirrored?"scale(-1, 1)":undefined},focusable:"false",color:color,children:SelectedIcon?/*#__PURE__*/ _jsx(SelectedIcon,{color:color,weight:weight}):/*#__PURE__*/ _jsx(NullState,{})})}));}Icon.displayName="Phosphor";Icon.defaultProps={width:24,height:24,iconSelection:"House",iconSearch:"House",color:"#66F",selectByList:true,weight:"regular",mirrored:false};addPropertyControls(Icon,{selectByList:{type:ControlType.Boolean,title:"Select",enabledTitle:"List",disabledTitle:"Search",defaultValue:Icon.defaultProps.selectByList},iconSelection:{type:ControlType.Enum,options:iconKeys,defaultValue:Icon.defaultProps.iconSelection,title:"Name",hidden:({selectByList})=>!selectByList},iconSearch:{type:ControlType.String,title:"Name",placeholder:"Menu, Wifi, Boxâ€¦",hidden:({selectByList})=>selectByList},color:{type:ControlType.Color,title:"Color",defaultValue:Icon.defaultProps.color},weight:{type:ControlType.Enum,title:"Weight",optionTitles:weightOptions.map(piece=>piece.charAt(0).toUpperCase()+piece.slice(1)),options:weightOptions,defaultValue:Icon.defaultProps.weight},mirrored:{type:ControlType.Boolean,enabledTitle:"Yes",disabledTitle:"No",defaultValue:Icon.defaultProps.mirrored},...defaultEvents});
export const __FramerMetadata__ = {"exports":{"IconProps":{"type":"tsType","annotations":{"framerContractVersion":"1"}},"Icon":{"type":"reactComponent","name":"Icon","slots":[],"annotations":{"framerContractVersion":"1","framerIntrinsicWidth":"24","framerIntrinsicHeight":"24","framerSupportedLayoutHeight":"fixed","framerSupportedLayoutWidth":"fixed"}},"__FramerMetadata__":{"type":"variable"}}}
//# sourceMappingURL=./Phosphor.map